/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package sistem.akuntan.mahasiswa;

import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import javax.swing.table.DefaultTableModel;
import java.sql.PreparedStatement;
import java.sql.Connection;
import java.sql.ResultSet;
import javax.swing.JOptionPane;

/**
 *
 * @author AJI SETIAJI
 */
public class AkuntanMahasiswa extends javax.swing.JFrame {

    /**
     * Creates new form AkuntanMahasiswa
     */
    public AkuntanMahasiswa() {
        initComponents();
        tampilData();
        jTable1.addMouseListener(new MouseAdapter() {
            @Override
            public void mouseClicked(MouseEvent e) {
                super.mouseClicked(e);
                int row = jTable1.getSelectedRow();
                if (row != -1) { // Pastikan baris yang dipilih valid
                    id.setText(jTable1.getValueAt(row, 0).toString());
                    nama.setText(jTable1.getValueAt(row, 1).toString());
                    kelas.setText(jTable1.getValueAt(row, 2).toString());
                    
                    // Set nilai combo box jurusan
                    String selectedJurusan = jTable1.getValueAt(row, 3).toString();
                    jurusan.setSelectedItem(selectedJurusan);
                    
                    // Set nilai combo box pembayaran
                    String selectedPembayaran = jTable1.getValueAt(row, 4).toString();
                    pembayaran.setSelectedItem(selectedPembayaran);
                    
                    jumlah.setText(jTable1.getValueAt(row, 5).toString());
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        kelas = new javax.swing.JTextField();
        nama = new javax.swing.JTextField();
        jumlah = new javax.swing.JTextField();
        jurusan = new javax.swing.JComboBox<>();
        pembayaran = new javax.swing.JComboBox<>();
        simpan = new javax.swing.JButton();
        hapus = new javax.swing.JButton();
        ubah = new javax.swing.JButton();
        cetak = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("INFORMASI PEMBAYARAN MAHASISWA");

        jLabel2.setText("ID Siswa");

        id.setName("idsiswafield"); // NOI18N
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });

        jLabel3.setText("Kelas");

        jLabel4.setText("Pembayaran");

        jLabel5.setText("Nama Siswa");

        jLabel6.setText("Jurusan");

        jLabel7.setText("Jumlah");

        kelas.setName("kelasfield"); // NOI18N

        nama.setName("namafield"); // NOI18N

        jumlah.setName("jumlahfield"); // NOI18N

        jurusan.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "TI", "SI", "DS", "DM" }));
        jurusan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jurusanActionPerformed(evt);
            }
        });

        pembayaran.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "CASH", "ONLINE" }));
        pembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pembayaranActionPerformed(evt);
            }
        });

        simpan.setText("Simpan");
        simpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanActionPerformed(evt);
            }
        });

        hapus.setText("Hapus");
        hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hapusActionPerformed(evt);
            }
        });

        ubah.setText("Ubah");
        ubah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubahActionPerformed(evt);
            }
        });

        cetak.setText("Cetak");
        cetak.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cetakActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 692, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4))
                                .addGap(24, 24, 24)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(kelas, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(pembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(116, 116, 116)
                                .addComponent(simpan)
                                .addGap(18, 18, 18)
                                .addComponent(hapus)))
                        .addGap(67, 67, 67)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(ubah)
                                .addGap(18, 18, 18)
                                .addComponent(cetak))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(176, 176, 176)
                .addComponent(jLabel1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(nama, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6)
                    .addComponent(kelas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jurusan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jLabel7)
                    .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(pembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpan)
                    .addComponent(hapus)
                    .addComponent(ubah)
                    .addComponent(cetak))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 313, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jurusanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jurusanActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jurusanActionPerformed

    private void pembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pembayaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_pembayaranActionPerformed

    private void hapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hapusActionPerformed
        // TODO add your handling code here:
        deleteData();
    }//GEN-LAST:event_hapusActionPerformed

    private void ubahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubahActionPerformed
        // TODO add your handling code here:
        editData();
    }//GEN-LAST:event_ubahActionPerformed

    private void cetakActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cetakActionPerformed
        // TODO add your handling code here:
        cetakData();
    }//GEN-LAST:event_cetakActionPerformed

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_idActionPerformed

    private void simpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanActionPerformed
        // TODO add your handling code here:
        insertData();
    }//GEN-LAST:event_simpanActionPerformed

    
    private void tampilData(){
        DefaultTableModel table1 = new DefaultTableModel();
        table1.addColumn("Id");
        table1.addColumn("Nama");
        table1.addColumn("Kelas");
        table1.addColumn("Jurusan");
        table1.addColumn("Pembayaran");
        table1.addColumn("Jumlah");
        try {
            KoneksiDatabase conn = new KoneksiDatabase();
            Connection connectBus = conn.connect();
            String sql = "select * from mahasiswa";
            PreparedStatement pst = connectBus.prepareStatement(sql);
            ResultSet rs = pst.executeQuery();

            while(rs.next()){
                table1.addRow(new Object[]{
                    rs.getString(1),
                    rs.getString(2),
                    rs.getString(3),
                    rs.getString(4),
                    rs.getString(5),
                    rs.getInt(6)});
                }
                jTable1.setModel(table1);
        }
        catch (Exception e){
            System.out.println(e.getMessage());
        }
    }
    
        private void editData() {
        try {
            if (id.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Harap mengisikan Id dengan benar");
                return; // Menghentikan proses jika Id kosong
            }

            String sql = "UPDATE mahasiswa SET nama=?, kelas=?, jurusan=?, pembayaran=?, jumlah=? WHERE id=?";
            KoneksiDatabase conn = new KoneksiDatabase();
            Connection connectBus = conn.connect();
            PreparedStatement pst = connectBus.prepareStatement(sql);

            // Mengambil data dari komponen input
            pst.setString(1, nama.getText());
            pst.setString(2, kelas.getText());
            pst.setString(3, (String) jurusan.getSelectedItem());
            pst.setString(4, (String) pembayaran.getSelectedItem());
            pst.setInt(5, Integer.parseInt(jumlah.getText())); // Mengonversi jumlah ke Integer
            pst.setString(6, id.getText()); // Id sebagai kondisi WHERE

            int rowsAffected = pst.executeUpdate(); // Mengembalikan jumlah baris yang terpengaruh
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil diperbarui !");
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            }
            tampilData();
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Jumlah harus berupa angka");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal memperbarui data !");
            System.out.println(e.getMessage());
        }
    }

    private void cetakData() {
        try {
            jTable1.print(); // Mencetak data yang ditampilkan di jTable1
        } catch (java.awt.print.PrinterException e) {
            System.err.format("Tidak bisa mencetak data: %s%n", e.getMessage());
        }
    }
    
    private void insertData() {
        try {
            // Memeriksa apakah ID sudah ada di database
            if (isIdExists(id.getText())) {
                JOptionPane.showMessageDialog(null, "ID sudah ada dalam database");
                return;
            }

            String sql = "INSERT INTO mahasiswa VALUES (?, ?, ?, ?, ?, ?)";
            KoneksiDatabase conn = new KoneksiDatabase();
            Connection connectBus = conn.connect();
            PreparedStatement pst = connectBus.prepareStatement(sql);

            // Mengambil data dari komponen input
            pst.setString(1, id.getText());
            pst.setString(2, nama.getText());
            pst.setString(3, kelas.getText());
            pst.setString(4, (String) jurusan.getSelectedItem());
            pst.setString(5, (String) pembayaran.getSelectedItem());
            pst.setInt(6, Integer.parseInt(jumlah.getText()));

            pst.executeUpdate();

            JOptionPane.showMessageDialog(null, "Berhasil menambahkan data");

            // Memanggil tampilData untuk menampilkan data terbaru
            tampilData();
        } catch (Exception e) {
            System.out.println(e.getMessage());
        }
    }

    private boolean isIdExists(String id) {
        try {
            String sql = "SELECT COUNT(*) FROM mahasiswa WHERE id = ?";
            KoneksiDatabase conn = new KoneksiDatabase();
            Connection connectBus = conn.connect();
            PreparedStatement pst = connectBus.prepareStatement(sql);
            pst.setString(1, id);
            ResultSet rs = pst.executeQuery();
            rs.next();
            int count = rs.getInt(1);
            return count > 0;
        } catch (Exception e) {
            System.out.println(e.getMessage());
            return false;
        }
    }

    
    private void deleteData() {
        try {
            if (id.getText().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Harap mengisikan Id dengan benar");
                return; // Menghentikan proses jika Id kosong
            }

            String sql = "DELETE FROM mahasiswa WHERE id = ?";
            KoneksiDatabase conn = new KoneksiDatabase();
            Connection connectBus = conn.connect();
            PreparedStatement pst = connectBus.prepareStatement(sql);
            
            // Mengatur parameter ke id dari komponen input
            pst.setString(1, id.getText()); 

            int rowsAffected = pst.executeUpdate(); // Mengembalikan jumlah baris yang terpengaruh
            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Data berhasil dihapus !");
            } else {
                JOptionPane.showMessageDialog(null, "Data tidak ditemukan");
            }
            tampilData();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Gagal menghapus data !");
            System.out.println(e.getMessage());
        }
    }
    
   
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AkuntanMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AkuntanMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AkuntanMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AkuntanMahasiswa.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AkuntanMahasiswa().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cetak;
    private javax.swing.JButton hapus;
    private javax.swing.JTextField id;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField jumlah;
    private javax.swing.JComboBox<String> jurusan;
    private javax.swing.JTextField kelas;
    private javax.swing.JTextField nama;
    private javax.swing.JComboBox<String> pembayaran;
    private javax.swing.JButton simpan;
    private javax.swing.JButton ubah;
    // End of variables declaration//GEN-END:variables
}
